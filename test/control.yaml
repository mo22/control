# example file
version: https://github.com/mo22/control
name: example

env:
    CPUCOUNT: 2

groups:
    test:
        - testcron

services:

    daemon:
        shell: while true; do date; sleep 10; done
        type: daemon

    cpustress:
        run: stress -c {CPUCOUNT}
        systemd: CPUQuota=10%
        # works!

    memstress:
        run: stress -m 1
        systemd: MemoryMax=100M
        # works!

    maxtime:
        shell: while true; do date; sleep 30; done
        systemd: RuntimeMaxSec=5m
        # works!

    testperiodic:
        shell: echo running at $( date )
        type: periodic
        systemd_timer: |
            OnActiveSec=1min
            OnUnitActiveSec=1min
        # interval=1min -> OnActiveSec and OnUnitInactiveSec
        # interval_random -> RandomizedDelaySec

    testcron:
        shell: echo running at $( date ) env $( env )
        type: cron
        systemd_timer: |
            OnCalendar=minutely
            RandomizedDelaySec=15s
        # works
        # cron=minutely
        # cron_random -> RandomizedDelaySec=x
        # cron_runmissed -> Persistent=true

    test-path:
        run: date

    test-js:
        cmd: test.js

    test-py:
        cmd: test.py

    testfail:
        run: fail.py

    testundead:
        run: undead.py
        # ?? -> TimeoutStopSec = how long to wait for shutdown before SIGKILL

    # something that does not die...
    # or something that does not start?

# onchange . scp control.py control.yaml beta.mxs.de:control/
